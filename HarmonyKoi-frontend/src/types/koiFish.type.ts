import { SuccessResponse } from './response.type'

// Define types for each data structure

export interface Element {
  id: string
  name: string // Make name required for clarity
  description: string
}

export interface veriety {
  name: string
  description: string
}
export interface KoiFishAttributes {
  id: string // Make id required since it's generated by the backend
  variety: veriety[]
  name: string
  description: string
  imageUrl: string
  baseColor: string
  symbolism: string
  price: number
  elements: Element[] // Array of elements (use Element type)
}

// Add types for adding new Koi Fish

export interface KoiFishAdd {
  variety: {
    id: string
    name?: string // Name can be optional when adding new data
  }
  name: string
  description: string
  imageUrl: string
  baseColor: string
  symbolism: string
  price: number
  elementIds: string[]
}

// Response types for fetching data

export type KoiFishResponse = {
  totalItem?: number
  data: KoiFishAttributes | KoiFishAttributes[]
  pagination: {
    totalItem: number
  }
}

// Success response wrapper type

export type KoiFishApiResponse = SuccessResponse<KoiFishAttributes[]>

// Detailed Koi Fish response

export interface DetailedKoiFishResponse extends KoiFishAttributes {
  userName: string
  isFeatured: boolean
}
